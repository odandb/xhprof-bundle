{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block toolbar %}
    {% set icon %}
        {# this is the content displayed as a panel in the toolbar #}
        {{ include('@OdandbXhprof/data_collector/icon.svg') }}
        <span class="sf-toolbar-value">Xhprof</span>
    {% endset %}

    {% set text %}
        {# this is the content displayed when hovering the mouse over
           the toolbar panel #}
        <div class="sf-toolbar-info-piece">
            <b>Profiler extension</b>
            {% for key, extensionFlag in collector.extensionLoaded %}
                <span class="sf-toolbar-status sf-toolbar-status-{{ extensionFlag == true ? 'green' : 'gray' }}">{{ key }} {{ extensionFlag == true ? '✓' : '✗' }}</span>
            {% endfor %}
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Status</b>
            <span class="sf-toolbar-status sf-toolbar-status-{{ collector.isEnabled ? 'green' : 'gray' }}">{{ collector.isEnabled ? "enabled" : "disabled" }}</span>
        </div>

        <div class="sf-toolbar-info-piece">
            <b>Saver Method</b>
            <span>{{ collector.saverMethod }}</span>
        </div>
        {% if collector.saverMethod == constant('Xhgui\\Profiler\\Profiler::SAVER_UPLOAD') %}
            <div class="sf-toolbar-info-piece">
                <b>Upload url</b>
                <span>{{ collector.uploadMethod['url'] }}</span>
            </div>
            <div class="sf-toolbar-info-piece">
                <b>Upload token</b>
                <span>{{ collector.uploadMethod['token'] }}</span>
            </div>
        {% endif %}
    {% endset %}

    {# the 'link' value set to 'false' means that this panel doesn't
       show a section in the web profiler #}
    {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: true }) }}
{% endblock %}

{% block menu %}
    {# This left-hand menu appears when using the full-screen profiler. #}
    <span class="label">
        {{ include('@OdandbXhprof/data_collector/icon.svg') }}
        <strong>Xhprof</strong>
    </span>
{% endblock %}

{% block head %}
    {{ parent() }}

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let parentSearchInput  = document.getElementById('odb_xhprof_panel__search_parent');
            let childSearchInput   = document.getElementById('odb_xhprof_panel__search_child');
            let caseSensitiveInput = document.getElementById('odb_xhprof_panel__case_sensitive');
            let searchValue   = '';
            let searchAttr    = '';
            let caseSensitive = false;
            parentSearchInput.addEventListener('input', function() {
                searchValue = this.value;
                searchAttr = 'data-title-parent';
                filterRows();
            });
            childSearchInput.addEventListener('input', function() {
                searchValue = this.value;
                searchAttr = 'data-title-child';
                filterRows();
            });
            caseSensitiveInput.addEventListener('change', function() {
                caseSensitive = this.checked;
                filterRows();
            });
            function filterRows() {
                document.querySelectorAll('#odb_xhprof_panel__table > tbody > tr').forEach(item => {
                    let needle   = searchValue;
                    let haystack = item.getAttribute(searchAttr);
                    console.log({needle, haystack, searchAttr, item});
                    if (false === caseSensitive) {
                        needle = needle.toLowerCase();
                        haystack = haystack.toLowerCase();
                    }
                    if (!haystack.includes(needle)) {
                        item.style.display = 'none';
                    } else {
                        item.style.display = 'table-row';
                    }
                });
            }
        });
    </script>
{% endblock %}

{% block panel %}
    {# Optional, for showing the most details. #}
    <h2>Xhgui configuration</h2>
    <div class="metrics">
        {% for key, extensionFlag in collector.extensionLoaded %}
            <div class="metric">
                <span class="value">
                    {% if extensionFlag == true %}
                        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 12 12"><path fill="#5E976E" d="M12 3.1c0 .4-.1.8-.4 1.1L5.9 9.8c-.3.3-.6.4-1 .4s-.7-.1-1-.4L.4 6.3C.1 6 0 5.6 0 5.2c0-.4.2-.7.4-.9.2-.3.6-.4.9-.4.4 0 .8.1 1.1.4l2.5 2.5 4.7-4.7c.3-.3.7-.4 1-.4.4 0 .7.2.9.4.3.3.5.6.5 1z"></path></svg>
                    {% else %}
                        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 12 12"><path fill="#999" d="M10.4 8.4L8 6l2.4-2.4c.8-.8.7-1.6.2-2.2-.6-.5-1.4-.6-2.2.2L6 4 3.6 1.6C2.8.8 2 .9 1.4 1.4c-.5.6-.6 1.4.2 2.2L4 6 1.6 8.4c-.8.8-.7 1.6-.2 2.2.6.6 1.4.6 2.2-.2L6 8l2.4 2.4c.8.8 1.6.7 2.2.2.5-.6.6-1.4-.2-2.2z"></path></svg>
                    {% endif %}
                </span>
                <span class="label">{{ key }}</span>
            </div>
        {% endfor %}
    </div>
    <table>
        <tr>
            <th>Status</th>
            <th><span class="sf-toolbar-status sf-toolbar-status-{{ collector.isEnabled ? 'green' : 'gray' }}">{{ collector.isEnabled ? "enabled" : "disabled" }}</span></th>
        </tr>
        <tr>
            <th>Saver Method</th>
            <th>{{ collector.saverMethod }}</th>
        </tr>
        {% if collector.saverMethod == constant('Xhgui\\Profiler\\Profiler::SAVER_UPLOAD') %}
            <tr>
                <th>Upload url</th>
                <th>{{ collector.uploadMethod['url'] }}</th>
            </tr>
            <tr>
                <th>Upload token</th>
                <th>{{ collector.uploadMethod['token'] }}</th>
            </tr>
        {% endif %}
    </table>
    <h2>Profile data</h2>
    {% if collector.profileData|length == 0 %}
    <div class="empty">
        <p>No XHProf data available</p>
    </div>
    {% else %}
    <div>
        <label style="margin-left: 10px" for="odb_xhprof_panel__case_sensitive">Case sensitive</label>
        <input style="margin-left: 4px; position: relative; top: 2px" id="odb_xhprof_panel__case_sensitive" type="checkbox" >
    </div>
    <table id="odb_xhprof_panel__table">
        <thead>
            <tr>
                <th>Parent <input id="odb_xhprof_panel__search_parent" type="text" placeholder="Search..." style="padding: 4px 10px 4px 10px" /></th>
                <th>Child <input id="odb_xhprof_panel__search_child" type="text" placeholder="Search..." style="padding: 4px 10px 4px 10px" /></th>
                <th><a href="?panel={{ app.request.get('panel')}}&sortBy=wt&sortOrder={{ app.request.get('sortOrder') == 'asc' ? 'desc' : 'asc' }}">Wall Time (μs)</a></th>
                <th><a href="?panel={{ app.request.get('panel')}}&sortBy=ct&sortOrder={{ app.request.get('sortOrder') == 'asc' ? 'desc' : 'asc' }}">Calls</a></th>
                <th><a href="?panel={{ app.request.get('panel')}}&sortBy=mu&sortOrder={{ app.request.get('sortOrder') == 'asc' ? 'desc' : 'asc' }}">Memory usage (bytes)</a></th>
                <th><a href="?panel={{ app.request.get('panel')}}&sortBy=pmu&sortOrder={{ app.request.get('sortOrder') == 'asc' ? 'desc' : 'asc' }}">Peak Memory usage (bytes)</a></th>
            </tr>
        </thead>

        <tbody>
            {% for profileData in collector.profileData %}
                <tr data-title-parent="{{ profileData.parent|e('html_attr') }}" data-title-child="{{ profileData.child|e('html_attr') }}">
                    <td style="cursor: default" title="{{ profileData.parent }}">{{ profileData.parent_trimmed }}</td>
                    <td style="cursor: default" title="{{ profileData.child }}">{{ profileData.child_trimmed }}</td>
                    <td>{{ profileData.wt }}</td>
                    <td>{{ profileData.ct }}</td>
                    <td>{{ profileData.mu }}</td>
                    <td>{{ profileData.pmu }}</td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    {% endif %}
{% endblock %}
